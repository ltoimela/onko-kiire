{"version":3,"sources":["components/DepartureRow.tsx","components/StopComponent.tsx","components/DeparturesMainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DepartureRow","departure","line","timeToDepart","StopComponent","stop","departureListOfLists","stoptimesForPatterns","map","value","ix","past","currentTime","Date","d","setHours","setMinutes","setSeconds","secondsAtMidnight","getTime","departures","stoptimes","st","secondsUTC","realtimeArrival","secondsToArrival","minutesToArrival","Math","floor","hoursToArrival","lineName","pattern","name","substr","indexOf","push","patternAndStopTimeToDeparture","merged","concat","sort","a","b","dix","BUS_LINES","initialStopsFromHome","id","initialStopsFromSchool","handleErrors","response","ok","Error","statusText","DeparturesMainPage","useState","stopsFromHome","setStopsFromHome","stopsFromSchool","setStopsFromSchool","index","setIndex","pollDeparatureInformation","Promise","resolve","reject","stopRequest","fetch","method","headers","body","JSON","stringify","query","then","res","json","stopList","data","stops","s","p","find","startsWith","catch","error","console","log","updateTimetable","promises","newStopsFromSchool","newStopsFromHome","all","useEffect","setInterval","style","width","Carousel","marginLeft","marginRight","height","activeIndex","onSelect","selectedIndex","e","CarouselItem","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee1bf50e.chunk.js","sourcesContent":["import { Departure } from \"./types\"\n\n\nexport const DepartureRow = ({departure} : {departure:Departure}) => {\n    return <div>{departure.line} lähtee {departure.timeToDepart} päästä</div>\n}","import React from \"react\";\nimport { DepartureRow } from \"./DepartureRow\";\nimport { Departure, PatternAndStopTimes, Stop } from \"./types\";\n\n\nfunction patternAndStopTimeToDeparture(past : PatternAndStopTimes) : Departure[]\n{\n \n    // Reference time at midnight\n    \n    const currentTime = new Date();\n    let d = new Date();\n    d.setHours(0);\n    d.setMinutes(0);\n    d.setSeconds(0);\n    const secondsAtMidnight = d.getTime() / 1000;\n\n    const departures : Departure[] = [];\n   \n    for (const st of past.stoptimes)\n    {\n        const secondsUTC = secondsAtMidnight + st.realtimeArrival;\n        let realtimeArrival = st.realtimeArrival;\n        let secondsToArrival = secondsUTC - currentTime.getTime() / 1000;\n        if (secondsToArrival < 0)\n        {\n            secondsToArrival += 24*60*60;\n            realtimeArrival += 24*60*60;\n            \n        }\n        let minutesToArrival = Math.floor(secondsToArrival / 60);\n        const hoursToArrival = Math.floor(minutesToArrival / 60) % 60;\n        secondsToArrival %= 60;\n        minutesToArrival %= 60;\n        if (hoursToArrival <= 1)\n        {\n            let lineName = past.pattern.name;\n            lineName = lineName.substr(0,lineName.indexOf(' '))\n            const d : Departure = { line: lineName, realtimeArrival : realtimeArrival, \n                timeToDepart : hoursToArrival === 0 ? `${minutesToArrival}m ${secondsToArrival}s` :\n                `${hoursToArrival}h ${minutesToArrival}m ${secondsToArrival}s`};\n            departures.push(d);\n        }\n    }\n\n    return departures;\n}\n\n\nexport const StopComponent = ({stop} : {stop:Stop})  =>\n{\n    const departureListOfLists = stop.stoptimesForPatterns.map((value, ix) => patternAndStopTimeToDeparture(value));\n    var merged =  ([] as Departure[]).concat(...departureListOfLists);\n    merged.sort((a,b) => {\n        return a.realtimeArrival < b.realtimeArrival ? -1 : 1;\n    });\n\n\n    return <div>\n        <div><b>Pysäkki {stop.name}</b></div>\n        {merged.map((d,dix) =>\n            <DepartureRow key={dix} departure={d} />\n        )}\n\n    </div>\n}","import React, { useDebugValue, useEffect, useState } from 'react';\nimport { Stop } from './types';\nimport { StopComponent } from './StopComponent';\nimport { Carousel, CarouselItem } from 'react-bootstrap';\n\nconst HSL_GRAPHQL_URL = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql';\n\n\nconst BUS_LINES = ['97 ', '841 ', '93 '];\nconst initialStopsFromHome : Stop[] = [\n    {id:'U3RvcDpIU0w6MTQ3MzEyMA==', name:'Fallpakka', stoptimesForPatterns:[]}, \n    {id:'U3RvcDpIU0w6MTQ3MzE2NQ==', name:'Mellunmäentie', stoptimesForPatterns:[]}\n];\nconst initialStopsFromSchool : Stop[] = [\n    {id:'U3RvcDpIU0w6MTQ1MjExMg==', name:'Rantakartanontie', stoptimesForPatterns:[]}\n]\n\nfunction handleErrors(response : Response) {\n  if (!response.ok) {\n      throw Error(response.statusText);\n  }\n  return response;\n}\n\n\nexport const DeparturesMainPage = () => {\n\n  const [stopsFromHome, setStopsFromHome] = useState<Stop[]>(initialStopsFromHome);\n  const [stopsFromSchool, setStopsFromSchool] = useState<Stop[]>(initialStopsFromSchool);\n  const [index, setIndex] = useState(0);\n      \n  const handleSelect = (selectedIndex:number, e:Record<string, unknown>|null) => {\n    setIndex(selectedIndex);\n  };\n\n  let postRequestInterval : NodeJS.Timeout;\n\n  function pollDeparatureInformation(stop : Stop) : Promise<boolean>\n  {\n    return new Promise((resolve, reject) => {\n\n    const stopRequest = `{\n      stops(name:\"${stop.name}\") {\n        id\n        name\n        stoptimesForPatterns {\n          pattern {\n            name\n          }\n          stoptimes {\n            realtimeArrival\n          }\n        }\n      }\n    }`;\n\n    fetch(HSL_GRAPHQL_URL,\n        {\n            method: 'POST', \n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            },\n            body :JSON.stringify({query: stopRequest})\n        })\n        .then(handleErrors)\n        .then(res => res.json())\n        .then(json => {\n                //console.log(json.data.stops);\n\n            const stopList = json.data.stops as Stop[];\n            //console.log('Total of ', stopList.length, ' stops found')\n\n            stop.stoptimesForPatterns = [];\n\n            for (const s of stopList)\n            {\n                if (stop.id === s.id)\n                {\n                    for (const p of s.stoptimesForPatterns)\n                    {\n                        if (BUS_LINES.find(line => p.pattern.name.startsWith(line))) {\n                            stop.stoptimesForPatterns.push(p);\n                        }\n                    }\n                }\n            }\n            resolve(true);\n        })\n        .catch(error => {\n            console.log('Error performing request: ',error);\n            reject(false);\n        });\n    });\n  }\n\n  async function updateTimetable()\n  {\n    const promises : Promise<boolean>[] = [];\n\n    const newStopsFromSchool = [...stopsFromSchool];\n    for (const s of newStopsFromSchool)\n    {\n        promises.push(pollDeparatureInformation(s));\n    }\n    const newStopsFromHome = [...stopsFromHome];\n    for (const s of newStopsFromHome)\n    {\n        promises.push(pollDeparatureInformation(s));\n    }\n    await Promise.all(promises);\n\n    setStopsFromHome(newStopsFromHome);\n    setStopsFromSchool(newStopsFromSchool);\n  }\n\n  useEffect(() => {\n    \n    // Manually invoke first update\n    updateTimetable();\n\n    // Later updates at 10s intervals\n    setInterval(updateTimetable,10000);\n  }, []);\n\n    return  <div style={{ width:\"100%\"}}>\n            <h1>Onko Kiire?</h1>\n            <Carousel style={{ marginLeft:\"5%\", marginRight:\"5%\", height:\"400px\"}} activeIndex={index} onSelect={handleSelect}>\n                <CarouselItem>\n                    <div>\n                        <h2>Kotoa kouluun</h2>\n                        {stopsFromHome.map((value, ix) => \n                            <StopComponent key={ix} stop={value} />\n                        )}\n                    </div>\n                </CarouselItem>\n                <CarouselItem>\n                    <div>\n                        <h2>Koululta kotiin</h2>\n\n                        {stopsFromSchool.map((value, ix) =>\n                            <StopComponent key={ix+1000} stop={value} />\n                        )}\n                    </div>\n                </CarouselItem>\n            </Carousel>\n\n            <p/>\n            </div>\n}","import './App.css';\nimport { DeparturesMainPage } from './components/DeparturesMainPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DeparturesMainPage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}